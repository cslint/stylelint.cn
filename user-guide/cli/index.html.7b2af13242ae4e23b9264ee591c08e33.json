{"head":{"description":"The stylelint CLI Installation stylelint is an npm package. Install it using: stylelint 是一个 npm 包。使用以下命令进行安装： Usage stylelint --help prints…","title":"The stylelint CLI"},"body":"<h1 id=\"the-stylelint-cli\"><a href=\"#the-stylelint-cli\" class=\"phenomic-HeadingAnchor\">#</a>The stylelint CLI</h1>\n<h2 id=\"installation\"><a href=\"#installation\" class=\"phenomic-HeadingAnchor\">#</a>Installation</h2>\n<p>stylelint is an <a href=\"https://www.npmjs.com/package/stylelint\">npm package</a>. Install it using:</p>\n<p>stylelint 是一个 <a href=\"https://www.npmjs.com/package/stylelint\">npm 包</a>。使用以下命令进行安装：</p>\n<pre><code class=\"hljs language-console\">npm <span class=\"hljs-keyword\">install</span> -g stylelint</code></pre>\n<h2 id=\"usage\"><a href=\"#usage\" class=\"phenomic-HeadingAnchor\">#</a>Usage</h2>\n<p><code>stylelint --help</code> prints the CLI documentation.</p>\n<p><code>stylelint --help</code> 打印命令行的文档。</p>\n<p>The CLI outputs formatted results into <code>process.stdout</code>, which you can read with your human eyes or pipe elsewhere (e.g. write the information to a file).</p>\n<p>命令行将格式化后的结果输出到 <code>process.stdout</code>，你可以自行阅读或输出到其他地方（如，将信息写到一个文件）</p>\n<h3 id=\"examples\"><a href=\"#examples\" class=\"phenomic-HeadingAnchor\">#</a>Examples</h3>\n<p>Looking for <code>.stylelintrc</code> and linting all <code>.css</code> files in the <code>foo</code> directory:  </p>\n<p>查找 <code>.stylelintrc</code>，检测 <code>foo</code> 目录下的所有的 <code>.css</code> 文件：</p>\n<pre><code class=\"hljs language-shell\"><span class=\"hljs-attribute\">stylelint</span> <span class=\"hljs-string\">\"foo/*.css\"</span></code></pre>\n<p>Looking for <code>.stylelintrc</code> and linting <code>stdin</code>:</p>\n<p>查找 <code>.stylelintrc</code>，检测 <code>stdin</code>：</p>\n<pre><code class=\"hljs language-shell\">echo <span class=\"hljs-string\">\"a { color: pink; }\"</span> <span class=\"hljs-string\">| stylelint</span></code></pre>\n<p>Using <code>bar/mySpecialConfig.json</code> as config to lint all <code>.css</code> files in the <code>foo</code> directory, then writing the output to <code>myTestReport.txt</code>:</p>\n<p>使用 <code>bar/mySpecialConfig.json</code> 配置，检测 <code>foo</code> 目录下的所有的 <code>.css</code> 文件，然后写入到 <code>myTestReport.txt</code>：</p>\n<pre><code class=\"hljs language-shell\">stylelint <span class=\"hljs-string\">\"foo/*.css\"</span> --<span class=\"hljs-built_in\">config</span> <span class=\"hljs-keyword\">bar/mySpecialConfig.json </span>> myTestReport.txt</code></pre>\n<p>Using <code>bar/mySpecialConfig.json</code> as config, with quiet mode on, to lint all <code>.css</code> files in the <code>foo</code> directory and any of its subdirectories and also all <code>.css</code> files in the <code>bar directory</code>, then writing the JSON-formatted output to <code>myJsonReport.json</code>:</p>\n<p>使用 <code>bar/mySpecialConfig.json</code> 配置，启用安静模式，检测 <code>foo</code> 目录及其子目录下的所有的 <code>.css</code> 文件，<code>bar directory</code>下的 <code>.css</code> 文件，然后以 JSON 格式输出到 <code>myJsonReport.json</code>：</p>\n<pre><code class=\"hljs language-shell\">stylelint <span class=\"hljs-string\">\"foo/**/*.css bar/*.css\"</span> -<span class=\"hljs-selector-tag\">q</span> -f json --config bar/mySpecialConfig<span class=\"hljs-selector-class\">.json</span> > myJsonReport.json</code></pre>\n<p>Linting all the <code>.scss</code> files in the <code>foo</code> directory, using the <code>syntax</code> option:</p>\n<p>使用 <code>syntax</code> 选项，检测 <code>foo</code> 目录下的所有 <code>.scss</code> 文件：</p>\n<pre><code class=\"hljs language-shell\">stylelint <span class=\"hljs-string\">\"foo/**/*.scss\"</span> <span class=\"hljs-comment\">--syntax scss</span></code></pre>\n<p>In addition to <code>--syntax scss</code>, stylelint supports <code>--syntax less</code> and <code>--syntax sugarss</code> by default. If you're using one of the default syntaxes, you may not need to provide a <code>--syntax</code> option: non-standard syntaxes can be automatically inferred from the following file extensions: <code>.less</code>, <code>.scss</code>, and <code>.sss</code>.</p>\n<p>除了 <code>--syntax scss</code>，默认情况下，stylelint 也支持 <code>--syntax less</code> 和 <code>--syntax sugarss</code>。如果你使用了其中的一个，你可以不提供 <code>--syntax</code> 选项：非标准的远方可以根据 <code>.less</code>，<code>.scss</code> 和 <code>.sss</code>的扩展名推断出来是哪种语法。</p>\n<p>Additionally, stylelint can accept a custom <a href=\"https://github.com/postcss/postcss#syntaxes\">PostCSS-compatible syntax</a>. To use a custom syntax, supply a syntax module name or path to the syntax file: <code>--custom-syntax custom-syntax</code> or <code>--custom-syntax ./path/to/custom-syntax</code>.</p>\n<p>此外，stylelint 可以接受一个自定义的 <a href=\"https://github.com/postcss/postcss#syntaxes\">PostCSS 兼容语法</a>。为了使用自定 语法，需要提供一个语法的模块名或语法文件的路径：<code>--custom-syntax custom-syntax</code> 或 <code>--custom-syntax ./path/to/custom-syntax</code>。</p>\n<p>Note, however, that stylelint can provide no guarantee that core rules will work with syntaxes other than the defaults listed above.</p>\n<p>但是请注意，stylelint 对核心规则与非默认的语法是否可以正常工作不提供任何保证。</p>\n<h2 id=\"syntax-errors\"><a href=\"#syntax-errors\" class=\"phenomic-HeadingAnchor\">#</a>Syntax errors</h2>\n<p>The CLI informs you about syntax errors in your CSS.\nIt uses the same format as it uses for linting warnings.\nThe error name is <code>CssSyntaxError</code>.</p>\n<p>命令行会通知你 CSS 文件中的语法错误。它使用同检测警告同样的格式。错误名称是 <code>CssSyntaxError</code>。</p>\n<h2 id=\"exit-codes\"><a href=\"#exit-codes\" class=\"phenomic-HeadingAnchor\">#</a>Exit codes</h2>\n<p>The CLI can exit the process with the following exit codes:</p>\n<p>命令行退出进程使用以下退出码：</p>\n<ul>\n<li>1: Something unknown went wrong.</li>\n<li>1：未知错误。</li>\n<li>2: At least one rule with an \"error\"-level severity triggered at least one warning.</li>\n<li>2：至少一个 \"error\" 严重级别的规则被触发，至少以一个警告。</li>\n<li>78: There was some problem with the configuration file.</li>\n<li>78：配置文件有问题。</li>\n<li>80: A file glob was passed, but it found no files.</li>\n<li>80：传入了文件 glob，但没有找到任何文件。</li>\n</ul>\n","__filename":"user-guide/cli.md","__url":"/user-guide/cli/","__resourceUrl":"/user-guide/cli/index.html","__dataUrl":"/user-guide/cli/index.html.7b2af13242ae4e23b9264ee591c08e33.json"}