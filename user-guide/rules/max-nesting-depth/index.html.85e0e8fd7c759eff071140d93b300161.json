{"head":{"description":"max-nesting-depth Limit the allowed nesting depth. 限制允许嵌套的深度。 This rule works by checking rules' and at-rules' actual \"nesting depth\"…","title":"max-nesting-depth"},"body":"<h1 id=\"max-nesting-depth\"><a href=\"#max-nesting-depth\" class=\"phenomic-HeadingAnchor\">#</a>max-nesting-depth</h1>\n<p>Limit the allowed nesting depth.</p>\n<p>限制允许嵌套的深度。</p>\n<pre><code class=\"hljs   language-css\"><span class=\"hljs-selector-tag\">a</span> { &#x26; > b { <span class=\"hljs-attribute\">top</span>: <span class=\"hljs-number\">0</span>; }\n<span class=\"hljs-comment\">/** ↑\n * This nesting */</span></code></pre>\n<p>This rule works by checking rules' and at-rules' actual \"nesting depth\" against your specified max. Here's how nesting depths works:</p>\n<p>该规则检查规则和 at 规则的实际嵌套深度与你指定的最大值。以下展示嵌套深度是如何工作的：</p>\n<pre><code class=\"hljs   language-css\"><span class=\"hljs-selector-tag\">a</span> {\n  &#x26; b { <span class=\"hljs-comment\">/* nesting depth 1 */</span>\n    &#x26; .foo { <span class=\"hljs-comment\">/* nesting depth 2 */</span>\n      @media print { <span class=\"hljs-comment\">/* nesting depth 3 */</span>\n        &#x26; .baz { <span class=\"hljs-comment\">/* nesting depth 4 */</span>\n          <span class=\"hljs-attribute\">color</span>: pink;\n        }\n      }\n    }\n  }\n}</code></pre>\n<p>Note that <strong>root-level at-rules will <em>not</em> be included in the nesting depth calculation</strong>, because most users would take for granted that root-level at-rules are \"free\" (because necessary). So both of the following <code>.foo</code> rules have a nesting depth of 2, and will therefore pass if your <code>max</code> is more than or equal to 2:</p>\n<p>注意，<strong>根级别的 at 规则将 <em>不会</em>被算进嵌套深度里</strong>，因为大多数用户会理所当然地认为根级别的 at 规则是必须的。因此，下面的 <code>.foo</code> 规则嵌套深度都为 <code>2</code>，如果你的 <code>max</code> 大于等于 2，将通过规则。</p>\n<p>注意，<strong>根级别的 at 规则将 <em>不会</em>被算进嵌套深度里</strong>，因为大多数用户会理所当然地认为根级别的 at 规则是必须的。因此，下面的 <code>.foo</code> 规则嵌套深度都为 <code>2</code>，如果你的 <code>max</code> 小于等于 2，将通过规则。</p>\n<pre><code class=\"hljs   language-css\"><span class=\"hljs-selector-tag\">a</span> {\n  b { <span class=\"hljs-comment\">/* 1 */</span>\n    .foo {} <span class=\"hljs-comment\">/* 2 */</span>\n  }\n}\n\n@<span class=\"hljs-keyword\">media</span> print { <span class=\"hljs-comment\">/* ignored */</span>\n  <span class=\"hljs-selector-tag\">a</span> {\n    b { <span class=\"hljs-comment\">/* 1 */</span>\n      .foo {} <span class=\"hljs-comment\">/* 2 */</span>\n    }\n  }\n}</code></pre>\n<p>This rule integrates into stylelint's core the functionality of the (now deprecated) plugin <a href=\"https://github.com/davidtheclark/stylelint-statement-max-nesting-depth\"><code>stylelint-statement-max-nesting-depth</code></a>.</p>\n<p>该规则已整合到 stylelint 的核心功能插件(现在已废弃)<a href=\"https://github.com/davidtheclark/stylelint-statement-max-nesting-depth\"><code>stylelint-statement-max-nesting-depth</code></a>。</p>\n<h2 id=\"options\"><a href=\"#options\" class=\"phenomic-HeadingAnchor\">#</a>Options</h2>\n<p><code>int</code>: Maximum nesting depth allowed.</p>\n<p><code>int</code>：所允许的最大嵌套深度。</p>\n<p>For example, with <code>2</code>:</p>\n<p>例如，最大嵌套深度为 <code>2</code>：</p>\n<p>The following patterns are considered warnings:</p>\n<p>以下模式被认为是个警告：</p>\n<pre><code class=\"hljs  invalid-pattern language-css\"><span class=\"hljs-selector-tag\">a</span> {\n  &#x26; .foo { <span class=\"hljs-comment\">/* 1 */</span>\n    &#x26;__foo { <span class=\"hljs-comment\">/* 2 */</span>\n      &#x26; > .bar {} <span class=\"hljs-comment\">/* 3 */</span>\n    }\n  }\n}</code></pre>\n<pre><code class=\"hljs  invalid-pattern language-css\"><span class=\"hljs-selector-tag\">a</span> {\n  @media print { <span class=\"hljs-comment\">/* 1 */</span>\n    &#x26; .foo { <span class=\"hljs-comment\">/* 2 */</span>\n      &#x26; .bar {} <span class=\"hljs-comment\">/* 3 */</span>\n    }\n  }\n}</code></pre>\n<p>The following patterns are <em>not</em> considered warnings:</p>\n<p>以下模式正常：</p>\n<pre><code class=\"hljs valid-pattern  language-css\"><span class=\"hljs-selector-tag\">a</span> {\n  &#x26; .foo { <span class=\"hljs-comment\">/* 1 */</span>\n    &#x26;__foo {} <span class=\"hljs-comment\">/* 2 */</span>\n  }\n}\n\n<span class=\"hljs-selector-tag\">a</span> <span class=\"hljs-selector-class\">.foo__foo</span> <span class=\"hljs-selector-class\">.bar</span> <span class=\"hljs-selector-class\">.baz</span> {}</code></pre>\n<pre><code class=\"hljs valid-pattern  language-css\">@<span class=\"hljs-keyword\">media</span> print {\n  <span class=\"hljs-selector-tag\">a</span> {\n    &#x26; .foo { <span class=\"hljs-comment\">/* 1 */</span>\n      &#x26;__foo {} <span class=\"hljs-comment\">/* 2 */</span>\n    }\n  }\n}</code></pre>\n<h2 id=\"optional-secondary-options\"><a href=\"#optional-secondary-options\" class=\"phenomic-HeadingAnchor\">#</a>Optional secondary options</h2>\n<h3 id=\"ignore-at-rules-without-declaration-blocks\"><a href=\"#ignore-at-rules-without-declaration-blocks\" class=\"phenomic-HeadingAnchor\">#</a><code>ignore: [\"at-rules-without-declaration-blocks\"]</code></h3>\n<p>Ignore at-rules that only wrap other rules, and do not themselves have declaration blocks.</p>\n<p>忽略只包裹了其他规则，而且没有自己的声明块的 at 规则，</p>\n<p>For example, with <code>1</code>:</p>\n<p>例如，最大嵌套深度为 <code>1</code>：</p>\n<p>The following patterns are considered warnings:</p>\n<p>以下模式被认为是个警告：</p>\n<p>As the at-rules have a declarations blocks.</p>\n<p>因为 at 规则有一个声明块。</p>\n<pre><code class=\"hljs  invalid-pattern language-css\"><span class=\"hljs-selector-tag\">a</span> {\n  &#x26;:hover { <span class=\"hljs-comment\">/* 1 */</span>\n    @media (<span class=\"hljs-attribute\">min-width</span>: <span class=\"hljs-number\">500px</span>) { color: pink; } <span class=\"hljs-comment\">/* 2 */</span>      \n  }\n}</code></pre>\n<pre><code class=\"hljs  invalid-pattern language-css\"><span class=\"hljs-selector-tag\">a</span> {\n  @nest > b { <span class=\"hljs-comment\">/* 1 */</span>\n    .foo { <span class=\"hljs-attribute\">color</span>: pink; } <span class=\"hljs-comment\">/* 2 */</span>      \n  }\n}</code></pre>\n<p>The following patterns are <em>not</em> considered warnings:</p>\n<p>以下模式正常：</p>\n<p>As all of the following <code>.foo</code> rules would have a nesting depth of just 1.</p>\n<p>因为下面所有的 <code>.foo</code> 规则嵌套深度为 1。</p>\n<pre><code class=\"hljs valid-pattern  language-css\"><span class=\"hljs-selector-tag\">a</span> {\n  .foo { <span class=\"hljs-attribute\">color</span>: pink; } <span class=\"hljs-comment\">/* 1 */</span>\n}</code></pre>\n<pre><code class=\"hljs valid-pattern  language-css\">@<span class=\"hljs-keyword\">media</span> print { <span class=\"hljs-comment\">/* ignored regardless of options */</span>\n  <span class=\"hljs-selector-tag\">a</span> {\n    .foo { <span class=\"hljs-attribute\">color</span>: pink; } <span class=\"hljs-comment\">/* 1 */</span>\n  }\n}</code></pre>\n<pre><code class=\"hljs valid-pattern  language-css\"><span class=\"hljs-selector-tag\">a</span> {\n  @media print { <span class=\"hljs-comment\">/* ignored because it's an at-rule without a declaration block of its own */</span>\n    .foo { <span class=\"hljs-attribute\">color</span>: pink; } <span class=\"hljs-comment\">/* 1 */</span>\n  }\n}</code></pre>\n<h3 id=\"ignoreatrules-regex-string\"><a href=\"#ignoreatrules-regex-string\" class=\"phenomic-HeadingAnchor\">#</a><code>ignoreAtRules: [\"/regex/\", \"string\"]</code></h3>\n<p>Ignore the specified at-rules.</p>\n<p>忽略指定的 at 规则。</p>\n<p>For example, with <code>1</code> and given:</p>\n<p>例如，最大嵌套深度为 <code>1</code>，给出：</p>\n<pre><code class=\"hljs language-js\">[<span class=\"hljs-string\">\"/^my-/\"</span>, <span class=\"hljs-string\">\"media\"</span>]</code></pre>\n<p>The following patterns are considered warnings:</p>\n<p>以下模式被认为是个警告：</p>\n<pre><code class=\"hljs  invalid-pattern language-css\"><span class=\"hljs-selector-tag\">a</span> {\n  @import print {       <span class=\"hljs-comment\">/* 1 */</span>\n    b { <span class=\"hljs-attribute\">top</span>: <span class=\"hljs-number\">0</span>; }       <span class=\"hljs-comment\">/* 2 */</span>\n  }\n}</code></pre>\n<pre><code class=\"hljs  invalid-pattern language-css\"><span class=\"hljs-selector-tag\">a</span> {\n  @not-my-at-rule print {   <span class=\"hljs-comment\">/* 1 */</span>\n    b { <span class=\"hljs-attribute\">top</span>: <span class=\"hljs-number\">0</span>; }       <span class=\"hljs-comment\">/* 2 */</span>\n  }\n}</code></pre>\n<p>The following patterns are <em>not</em> considered warnings:</p>\n<p>以下模式正常：</p>\n<pre><code class=\"hljs valid-pattern  language-css\"><span class=\"hljs-selector-tag\">a</span> {\n  @media print {      <span class=\"hljs-comment\">/* 1 */</span>\n    b {               <span class=\"hljs-comment\">/* 2 */</span>\n      c { <span class=\"hljs-attribute\">top</span>: <span class=\"hljs-number\">0</span>; }   <span class=\"hljs-comment\">/* 3 */</span>\n    }\n  }\n}</code></pre>\n<pre><code class=\"hljs valid-pattern  language-css\"><span class=\"hljs-selector-tag\">a</span> {\n  b {                 <span class=\"hljs-comment\">/* 1 */</span>\n    @media print {    <span class=\"hljs-comment\">/* 2 */</span>\n      c { <span class=\"hljs-attribute\">top</span>: <span class=\"hljs-number\">0</span>; }   <span class=\"hljs-comment\">/* 3 */</span>\n    }\n  }\n}</code></pre>\n<pre><code class=\"hljs valid-pattern  language-css\"><span class=\"hljs-selector-tag\">a</span> {\n  @my-at-rule print {  <span class=\"hljs-comment\">/* 1 */</span>\n    b {                <span class=\"hljs-comment\">/* 2 */</span>\n      c { <span class=\"hljs-attribute\">top</span>: <span class=\"hljs-number\">0</span>; }    <span class=\"hljs-comment\">/* 3 */</span>\n    }\n  }\n}</code></pre>\n<pre><code class=\"hljs valid-pattern  language-css\"><span class=\"hljs-selector-tag\">a</span> {\n  @my-other-at-rule print {  <span class=\"hljs-comment\">/* 1 */</span>\n    b {                      <span class=\"hljs-comment\">/* 2 */</span>\n      c { <span class=\"hljs-attribute\">top</span>: <span class=\"hljs-number\">0</span>; }          <span class=\"hljs-comment\">/* 3 */</span>\n    }\n  }\n}</code></pre>\n","__filename":"user-guide/rules/max-nesting-depth.md","__url":"/user-guide/rules/max-nesting-depth/","__resourceUrl":"/user-guide/rules/max-nesting-depth/index.html","__dataUrl":"/user-guide/rules/max-nesting-depth/index.html.85e0e8fd7c759eff071140d93b300161.json"}